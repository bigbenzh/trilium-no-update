name: build
on:
  workflow_dispatch:
    inputs:
      build-target:
        description: 'Build Target ("nightly"/"beta"/"non-release")'
        type: string
        required: true
        default: "beta"
      git-ref:
        description: "Release Git Ref(master)"
        required: true
        default: "master"
      is-draft:
        description: 'Draft Release? (Beta only, Nightly will always be a non-draft)'
        type: boolean
        required: true
        default: true
      is-pre-release:
        description: 'Pre Release? (labeled as "PreRelease")'
        type: boolean
        required: true
        default: true
  schedule:
    - cron: 0 0 */7 * *
        
jobs:
  compile:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2
      
    - name: clone trilium
      uses: actions/checkout@v2
      with:
          repository: zadam/trilium
          path: trilium
          
    - name: use the latest version
      run: cd trilium/ && git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
          
    - name: Install Wine
      run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Python 3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: pre-build
      run: |
          mv -f trilium/* ./
          mkdir -p dist/trilium-src 
          npm install

    - name: disable auto-update
      run: python disable_update.py

    
    - name: build
      run:  bin/build.sh

    - name: upload
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.*

  release:
    if: ${{ github.event_name == 'workflow_dispatch'}}
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
    - name: download
      uses: actions/download-artifact@v3
      with:
        name: artifact

    - name: Create Release Draft
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "test"
        prerelease: true
        title: "Test"
        files: |
          *.*
          
  auto-release:
    if: ${{ github.event_name == 'schedule'}}
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
    - name: download
      uses: actions/download-artifact@v3
      with:
        name: artifact

    - name: Create Release Draft
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Auto Build"
        files: |
          *.*
